{
  "contractName": "Minter",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "minter",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "pauser",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "status",
          "type": "bool"
        },
        {
          "indexed": false,
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "Pause",
      "type": "event"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"minter\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pauser\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"status\",\"type\":\"bool\"},{\"indexed\":false,\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"Pause\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/usr0101757/Projects/GYEN/gyen-solidity/contracts/Roles/Minter.sol\":\"Minter\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/usr0101757/Projects/GYEN/gyen-solidity/contracts/Roles/Common.sol\":{\"keccak256\":\"0xbb094bcc9535da32a6f3e8b7ab39ecd9723e7c59de567883f1e31123af8312f8\",\"urls\":[\"bzzr://35606db5e5f5f8b5c4a4930bb824f75ca5205a58bf4277b2ba147023e5b84f73\"]},\"/Users/usr0101757/Projects/GYEN/gyen-solidity/contracts/Roles/Minter.sol\":{\"keccak256\":\"0x841cdd13b57324e104a8a5a6faa725966e386206328f87c5db8e79ba7aafd362\",\"urls\":[\"bzzr://097f152254b3519cac2d88a189269e8b4d96a639176a3104cf302ea75281b7c2\"]},\"/Users/usr0101757/Projects/GYEN/gyen-solidity/contracts/Roles/Pauser.sol\":{\"keccak256\":\"0x8bfbb5355a6e2a7f23d6750ea467542d830b40513ebb2ccb741f7fa1443b6079\",\"urls\":[\"bzzr://d93cb919ab458055df635fa9f2b9cbc1637e7801cf46f04806050d8e5fada512\"]}},\"version\":1}",
  "bytecode": "0x6080604052600080546001600160a81b0319169055600180546001600160a01b031916905534801561003057600080fd5b5061034e806100406000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063075461721461005c5780633f4ba83a146100805780635c975abb1461008a5780638456cb59146100a65780639fd0506d146100ae575b600080fd5b6100646100b6565b604080516001600160a01b039092168252519081900360200190f35b6100886100c5565b005b6100926101e1565b604080519115158252519081900360200190f35b6100886101f1565b610064610313565b6001546001600160a01b031681565b6000546001600160a01b031633146101275760408051600160e51b62461bcd02815260206004820152601c60248201527f7468652073656e646572206973206e6f74207468652070617573657200000000604482015290519081900360640190fd5b600054600160a01b900460ff166101885760408051600160e51b62461bcd02815260206004820152601d60248201527f74686973206973206e6f7420612070617573656420636f6e7472616374000000604482015290519081900360640190fd5b60008054600160a01b60ff0219169081905560408051600160a01b90920460ff161515825233602083015280517f5a9dfee0981174e5203ccf9368a8cabb254f9dea6ca43f96b4bbd10c69415d8a9281900390910190a1565b600054600160a01b900460ff1681565b6000546001600160a01b031633146102535760408051600160e51b62461bcd02815260206004820152601c60248201527f7468652073656e646572206973206e6f74207468652070617573657200000000604482015290519081900360640190fd5b600054600160a01b900460ff16156102b55760408051600160e51b62461bcd02815260206004820152601960248201527f7468697320697320612070617573656420636f6e747261637400000000000000604482015290519081900360640190fd5b60008054600160a01b60ff021916600160a01b90811791829055604080519190920460ff161515815233602082015281517f5a9dfee0981174e5203ccf9368a8cabb254f9dea6ca43f96b4bbd10c69415d8a929181900390910190a1565b6000546001600160a01b03168156fea165627a7a72305820b466e450418d472479f07596cf7ac1eac6cf13910722b70a105a8096e8be1c330029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c8063075461721461005c5780633f4ba83a146100805780635c975abb1461008a5780638456cb59146100a65780639fd0506d146100ae575b600080fd5b6100646100b6565b604080516001600160a01b039092168252519081900360200190f35b6100886100c5565b005b6100926101e1565b604080519115158252519081900360200190f35b6100886101f1565b610064610313565b6001546001600160a01b031681565b6000546001600160a01b031633146101275760408051600160e51b62461bcd02815260206004820152601c60248201527f7468652073656e646572206973206e6f74207468652070617573657200000000604482015290519081900360640190fd5b600054600160a01b900460ff166101885760408051600160e51b62461bcd02815260206004820152601d60248201527f74686973206973206e6f7420612070617573656420636f6e7472616374000000604482015290519081900360640190fd5b60008054600160a01b60ff0219169081905560408051600160a01b90920460ff161515825233602083015280517f5a9dfee0981174e5203ccf9368a8cabb254f9dea6ca43f96b4bbd10c69415d8a9281900390910190a1565b600054600160a01b900460ff1681565b6000546001600160a01b031633146102535760408051600160e51b62461bcd02815260206004820152601c60248201527f7468652073656e646572206973206e6f74207468652070617573657200000000604482015290519081900360640190fd5b600054600160a01b900460ff16156102b55760408051600160e51b62461bcd02815260206004820152601960248201527f7468697320697320612070617573656420636f6e747261637400000000000000604482015290519081900360640190fd5b60008054600160a01b60ff021916600160a01b90811791829055604080519190920460ff161515815233602082015281517f5a9dfee0981174e5203ccf9368a8cabb254f9dea6ca43f96b4bbd10c69415d8a929181900390910190a1565b6000546001600160a01b03168156fea165627a7a72305820b466e450418d472479f07596cf7ac1eac6cf13910722b70a105a8096e8be1c330029",
  "sourceMap": "49:186:7:-;;;113:1:10;81:34;;-1:-1:-1;;;;;;121:26:10;;;81:34;::7;;-1:-1:-1;;;;;;81:34:7;;;49:186;5:2:-1;;;;30:1;27;20:12;5:2;49:186:7;;;;;;;",
  "deployedSourceMap": "49:186:7:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;49:186:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;81:34;;;:::i;:::-;;;;-1:-1:-1;;;;;81:34:7;;;;;;;;;;;;;;651:119:10;;;:::i;:::-;;121:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;526:119;;;:::i;81:34::-;;;:::i;::7:-;;;-1:-1:-1;;;;;81:34:7;;:::o;651:119:10:-;255:6;;-1:-1:-1;;;;;255:6:10;241:10;:20;233:61;;;;;-1:-1:-1;;;;;233:61:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;462:6;;-1:-1:-1;;;462:6:10;;;;454:48;;;;;-1:-1:-1;;;;;454:48:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;718:5;709:14;;-1:-1:-1;;;;;;709:14:10;;;;;738:25;;;-1:-1:-1;;;744:6:10;;;709:14;744:6;738:25;;;;752:10;738:25;;;;;;;;;;;;;;;;651:119::o;121:26::-;;;-1:-1:-1;;;121:26:10;;;;;:::o;526:119::-;255:6;;-1:-1:-1;;;;;255:6:10;241:10;:20;233:61;;;;;-1:-1:-1;;;;;233:61:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;362:6;;-1:-1:-1;;;362:6:10;;;;361:7;353:45;;;;;-1:-1:-1;;;;;353:45:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;585:6;:13;;-1:-1:-1;;;;;;585:13:10;-1:-1:-1;;;585:13:10;;;;;;;613:25;;;619:6;;;;585:13;619:6;613:25;;;;627:10;613:25;;;;;;;;;;;;;;;;;526:119::o;81:34::-;;;-1:-1:-1;;;;;81:34:10;;:::o",
  "source": "pragma solidity ^0.5.8;\n\nimport \"./Pauser.sol\";\n\ncontract Minter is Pauser {\n    address public minter = address(0);\n\n    modifier onlyMinter() {\n        require(msg.sender == minter, \"the sender is not the minter\");\n        _;\n    }\n}",
  "sourcePath": "/Users/usr0101757/Projects/GYEN/gyen-solidity/contracts/Roles/Minter.sol",
  "ast": {
    "absolutePath": "/Users/usr0101757/Projects/GYEN/gyen-solidity/contracts/Roles/Minter.sol",
    "exportedSymbols": {
      "Minter": [
        503
      ]
    },
    "id": 504,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 482,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".8"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:7"
      },
      {
        "absolutePath": "/Users/usr0101757/Projects/GYEN/gyen-solidity/contracts/Roles/Pauser.sol",
        "file": "./Pauser.sol",
        "id": 483,
        "nodeType": "ImportDirective",
        "scope": 504,
        "sourceUnit": 782,
        "src": "25:22:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 484,
              "name": "Pauser",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 781,
              "src": "68:6:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Pauser_$781",
                "typeString": "contract Pauser"
              }
            },
            "id": 485,
            "nodeType": "InheritanceSpecifier",
            "src": "68:6:7"
          }
        ],
        "contractDependencies": [
          480,
          781
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 503,
        "linearizedBaseContracts": [
          503,
          781,
          480
        ],
        "name": "Minter",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 490,
            "name": "minter",
            "nodeType": "VariableDeclaration",
            "scope": 503,
            "src": "81:34:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 486,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "81:7:7",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "30",
                  "id": 488,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "113:1:7",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_0_by_1",
                    "typeString": "int_const 0"
                  },
                  "value": "0"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_0_by_1",
                    "typeString": "int_const 0"
                  }
                ],
                "id": 487,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "105:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": "address"
              },
              "id": 489,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "105:10:7",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 501,
              "nodeType": "Block",
              "src": "144:89:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 496,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 493,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2215,
                            "src": "162:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 494,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "162:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 495,
                          "name": "minter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 490,
                          "src": "176:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "162:20:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "7468652073656e646572206973206e6f7420746865206d696e746572",
                        "id": 497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "184:30:7",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_74056acdca5aa642dc9ac8dc232b5f10a82f2fb0f6f67bf8f92b0549f2b03b94",
                          "typeString": "literal_string \"the sender is not the minter\""
                        },
                        "value": "the sender is not the minter"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_74056acdca5aa642dc9ac8dc232b5f10a82f2fb0f6f67bf8f92b0549f2b03b94",
                          "typeString": "literal_string \"the sender is not the minter\""
                        }
                      ],
                      "id": 492,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2218,
                        2219
                      ],
                      "referencedDeclaration": 2219,
                      "src": "154:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "154:61:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 499,
                  "nodeType": "ExpressionStatement",
                  "src": "154:61:7"
                },
                {
                  "id": 500,
                  "nodeType": "PlaceholderStatement",
                  "src": "225:1:7"
                }
              ]
            },
            "documentation": null,
            "id": 502,
            "name": "onlyMinter",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 491,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "141:2:7"
            },
            "src": "122:111:7",
            "visibility": "internal"
          }
        ],
        "scope": 504,
        "src": "49:186:7"
      }
    ],
    "src": "0:235:7"
  },
  "legacyAST": {
    "absolutePath": "/Users/usr0101757/Projects/GYEN/gyen-solidity/contracts/Roles/Minter.sol",
    "exportedSymbols": {
      "Minter": [
        503
      ]
    },
    "id": 504,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 482,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".8"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:7"
      },
      {
        "absolutePath": "/Users/usr0101757/Projects/GYEN/gyen-solidity/contracts/Roles/Pauser.sol",
        "file": "./Pauser.sol",
        "id": 483,
        "nodeType": "ImportDirective",
        "scope": 504,
        "sourceUnit": 782,
        "src": "25:22:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 484,
              "name": "Pauser",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 781,
              "src": "68:6:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Pauser_$781",
                "typeString": "contract Pauser"
              }
            },
            "id": 485,
            "nodeType": "InheritanceSpecifier",
            "src": "68:6:7"
          }
        ],
        "contractDependencies": [
          480,
          781
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 503,
        "linearizedBaseContracts": [
          503,
          781,
          480
        ],
        "name": "Minter",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 490,
            "name": "minter",
            "nodeType": "VariableDeclaration",
            "scope": 503,
            "src": "81:34:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 486,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "81:7:7",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "30",
                  "id": 488,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "113:1:7",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_0_by_1",
                    "typeString": "int_const 0"
                  },
                  "value": "0"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_0_by_1",
                    "typeString": "int_const 0"
                  }
                ],
                "id": 487,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "105:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": "address"
              },
              "id": 489,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "105:10:7",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 501,
              "nodeType": "Block",
              "src": "144:89:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 496,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 493,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2215,
                            "src": "162:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 494,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "162:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 495,
                          "name": "minter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 490,
                          "src": "176:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "162:20:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "7468652073656e646572206973206e6f7420746865206d696e746572",
                        "id": 497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "184:30:7",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_74056acdca5aa642dc9ac8dc232b5f10a82f2fb0f6f67bf8f92b0549f2b03b94",
                          "typeString": "literal_string \"the sender is not the minter\""
                        },
                        "value": "the sender is not the minter"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_74056acdca5aa642dc9ac8dc232b5f10a82f2fb0f6f67bf8f92b0549f2b03b94",
                          "typeString": "literal_string \"the sender is not the minter\""
                        }
                      ],
                      "id": 492,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2218,
                        2219
                      ],
                      "referencedDeclaration": 2219,
                      "src": "154:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "154:61:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 499,
                  "nodeType": "ExpressionStatement",
                  "src": "154:61:7"
                },
                {
                  "id": 500,
                  "nodeType": "PlaceholderStatement",
                  "src": "225:1:7"
                }
              ]
            },
            "documentation": null,
            "id": 502,
            "name": "onlyMinter",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 491,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "141:2:7"
            },
            "src": "122:111:7",
            "visibility": "internal"
          }
        ],
        "scope": 504,
        "src": "49:186:7"
      }
    ],
    "src": "0:235:7"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-10-04T06:48:48.900Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}